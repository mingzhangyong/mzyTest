Android自带的组件 SwipeRefreshLayout 可以很美观的实现下拉刷新的动画效果。

但是如果 嵌套在 SwipeRefreshLayout 里面不止有下拉刷新，还有左右滑动手势呢？

例如SwipeRefreshLayout 中包含一个水平滑动的banner，和一个垂直滑动的listView.

这个时候我们会发现左右滑动必须水平才能左右滑，否则会触发SwipeRefreshLayout下拉事件，这样的用户体验就不多说了。

直接上解决方案：


首先我们需要确认用户进行了什么操作，这里需要一个GestureDetector获取用户手势

我们认为 在X轴上的移动偏移量 大于 Y轴移动偏移量则 识别为左右滑，否则认为是上下滑。

gestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {
            @Override
             public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {
                if (Math.abs(distanceX) > Math.abs(distanceY)) {
		//左右滑动
                  
                } else {
		//上下滑动

                }
                 return super.onScroll(e1, e2, distanceX, distanceY);
            }
        });

滑动事件的冲突在于谁响应了滑动事件。

穿插一句view的onTouchEvent()响应原理：如果父容器不响应该事件（return false），则子容器响应，如果子容器也不响应，那么还是会交给父容器来处理。


所以我们的思路是：

如果判定为左右滑动，那么子容器去响应滑动事件，否则父容器响应滑动事件。

我试过重写onInterceptTouchEvent()，方法。但是会出现很多问题。后面会说到。先说解决方案。

新建一个类GestureSwipeRefreshLayout ,将SwipeRefreshLayout 完全复制过来。然后项目会提示没有CircleImageView、MaterialProgressDrawable两个类。这是因为这两个类是android.support.v4.widget的私有类。我们把这两个类再复制出来
直到GestureSwipeRefreshLayout 不再报错。

然后修改GestureSwipeRefreshLayout 

在构造方法中实例化gestureDetector ，

 gestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {
            @Override
             public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {
                if (Math.abs(distanceX) > Math.abs(distanceY)) {
                    bannerHandlerAction = true;

                } else {
                    bannerHandlerAction = false;

                }
                 return super.onScroll(e1, e2, distanceX, distanceY);
            }
        });

在onInterceptTouchEvent()方法里面
调用gestureDetector.onTouchEvent(ev);
并在返回时  return bannerHandlerAction ? false:mIsBeingDragged;
中间的动画处理不要改动。

即：onInterceptTouchEvent(MotionEvent ev){
	gestureDetector.onTouchEvent(ev);
	...
	...
	return bannerHandlerAction ? false:mIsBeingDragged;
}

以上完成了SwipeRefreshLayout 带手势的监听。



下面来谈谈为什么不重写 SwipeRefreshLayout 的onInterceptTouchEvent() 方法

因为在继承SwipeRefreshLayout 然后重写onInterceptTouchEvent()方法对于MotionEvent 的事件处理不能完美的处理掉。

如果这么写：onInterceptTouchEvent(MotionEvent ev){
	gestureDetector.onTouchEvent(ev);
	...
	...
	return bannerHandlerAction ? false:super.onInterceptTouchEvent(ev);
}
看上去是可以的。但是真正操作的时候，你会发现，当你左右滑动以后无论是上滑还是下滑，都会触发刷新操作！

（如果重写SimpleOnGestureListener的onfling放发的话，左右滑动以后第一次下滑不会刷新、下滑以后再左右滑需要水平滑动）



原因还是在view的touch事件的分发机制。

上述代码中，我们添加了手势的识别，逻辑如下：当手势为左右滑动时layout不监听事件即banner响应。手势为上下时当前layout不处理交给父类SwipeRefreshLayout 处理。父类实现下滑刷新的动画

似乎逻辑上也没有问题！

真正的原因在于，滑动事件包含  点下->滑动->抬起  三个事件。当bannerHandlerAction 由真变为假的时候，我们在“点下”这个事件的时候bannerHandlerAction 依然为真，只有当滑动的时候Y方向的偏移量大于X的时候才会传给父类。所以父类不能接收到“点下”事件。

父类接收不到点下事件，那么就无法判断是下拉还是上拉。所以引出一系列的问题。

解决方法，就是全部复制出来自己重新写。